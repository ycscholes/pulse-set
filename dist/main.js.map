{"version":3,"sources":["../src/main.js"],"names":[],"mappings":";;;;;AAAA,IAAM,WAAW,SAAX,QAAW,GAAW;AACxB,SAAK,GAAL,GAAW,EAAX;AACH,CAFD;;AAIA,SAAS,SAAT,GAAqB;AACjB;;;;;;;AAOA,SARiB,iBAQX,IARW,EAQL,IARK,EAQC,MARD,EAQS,KART,EAQgB;AAC7B,aAAK,GAAL,CAAS,IAAT;AACA,YAAI,OAAO,IAAX;AACA,YAAI,QAAQ;AACR,sBADQ;AAER;AAFQ,SAAZ;AAIA,YAAI,eAAe,SAAf,YAAe,GAAW;AAC1B,gBAAI;AACA;AACA,oBAAI,aAAa,KAAjB,EAAwB;AACpB,yBAAK,GAAL,CAAS,IAAT;AACH,iBAFD,MAEO;AACH;AACH;AACJ,aAPD,CAOE,OAAO,CAAP,EAAU;AACR,wBAAQ,KAAR,CAAc,CAAd;AACA,oBAAI,OAAO,KAAP,KAAiB,UAArB,EAAiC;AAC7B;AACH;AACJ;AACJ,SAdD;AAeA,YAAI,cAAc,SAAd,WAAc,GAAW;AACzB,kBAAM,EAAN,GAAW,WAAW,YAAX,EAAyB,IAAzB,CAAX;AACH,SAFD;;AAIA;AACA,aAAK,GAAL,CAAS,IAAT,CAAc,KAAd;AACH,KApCgB;AAqCjB,OArCiB,eAqCb,IArCa,EAqCP;AACN,YAAI,QAAQ,KAAK,GAAL,CAAS,SAAT,CAAmB;AAAA,mBAAK,EAAE,IAAF,KAAW,IAAhB;AAAA,SAAnB,CAAZ;;AAEA,YAAI,QAAQ,CAAC,CAAb,EAAgB;AACZ,gBAAI,QAAQ,KAAK,GAAL,CAAS,KAAT,CAAZ;;AAEA,yBAAa,MAAM,EAAnB;AACA,iBAAK,GAAL,CAAS,MAAT,CAAgB,KAAhB,EAAuB,CAAvB;AACH;AACJ;AA9CgB,CAArB;;AAiDA,IAAM,KAAK,IAAI,QAAJ,EAAX;kBACe,E","file":"main.js","sourcesContent":["const PulseSet = function() {\n    this.set = [];\n};\n\nPulseSet.prototype = {\n    /**\n     * Start and cache a pulse\n     * @param  {string} name  Pulse name\n     * @param  {int} time   Pulse timestamp\n     * @param  {function} action Pulse action\n     * @param  {function} error  Emit when exception occures in action running\n     */\n    start(name, time, action, error) {\n        this.end(name);\n        let self = this;\n        let pulse = {\n            name,\n            time\n        };\n        let actionMethod = function() {\n            try {\n                // if action return false then end the pulse\n                if (action() === false) {\n                    self.end(name);\n                } else {\n                    actionPulse();\n                }\n            } catch (e) {\n                console.error(e);\n                if (typeof error === 'function') {\n                    error();\n                }\n            }\n        };\n        let actionPulse = function() {\n            pulse.id = setTimeout(actionMethod, time);\n        };\n\n        actionMethod();\n        this.set.push(pulse);\n    },\n    end(name) {\n        let index = this.set.findIndex(v => v.name === name);\n\n        if (index > -1) {\n            let pulse = this.set[index];\n\n            clearTimeout(pulse.id);\n            this.set.splice(index, 1);\n        }\n    }\n};\n\nconst ps = new PulseSet();\nexport default ps;\n"]}